services:
  php:
    build: ./docker/php
    container_name: mini_reseau_php
    working_dir: /var/www/html
    volumes:
      - ./symfony:/var/www/html
    environment:
      # variables utilisées par le script d'attente et Symfony (même valeurs que pour db)
      DB_HOST: db
      DB_USER: user
      DB_PASS: password
      DB_NAME: mini_reseau
      COMPOSER_ALLOW_SUPERUSER: "1"
      MAILER_DSN: smtp://mailhog:1025
    restart: unless-stopped

  messenger_worker:
    container_name: mini_reseau_worker
    build:
      context: ./docker/php
    working_dir: /var/www/html
    volumes:
      - ./symfony:/var/www/html
    command: php bin/console messenger:consume async -vv
    depends_on:
      - db
    restart: unless-stopped

  web:
    image: nginx:alpine
    container_name: mini_reseau_web
    depends_on:
      - php
      - db
    ports:
      - "8000:80"
    volumes:
      - ./symfony:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mini_reseau_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mini_reseau
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    # Désactive l'exigence de transport sécurisé côté serveur (OK en dev)
    command: --require_secure_transport=0
    ports:
      - "3306:3306"
    restart: unless-stopped
    healthcheck:
      # healthcheck simple qui ping mysql via mysqladmin
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mini_reseau_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog
    container_name: mini_reseau_mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: unless-stopped
